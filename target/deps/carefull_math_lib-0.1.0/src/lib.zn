//!
//! The 'carefull_math_lib' library entry.
//!

pub mod safe_math;


pub enum MathError {
        NO_ERROR=1,
        DIVISION_BY_ZERO=2,
        INTEGER_OVERFLOW=3,
        INTEGER_UNDERFLOW=4,
    }

pub fn mulUInt(a:u248, b:u248) -> (MathError, u248) {
        if (a == 0) {
             (MathError::NO_ERROR, 0 as u248)
        }else{

        let c = a * b;

        if (c / a != b) {
             (MathError::INTEGER_OVERFLOW, 0 as u248)
        } else {
             (MathError::NO_ERROR, c)
        }
    }
}


pub fn  divUInt(a:u248,b:u248) -> (MathError, u248) {
        if (b == 0) {
             (MathError::DIVISION_BY_ZERO, 0 as u248)
        }else{
              (MathError::NO_ERROR, a / b)
        }
    }



pub fn subUInt(a:u248,b:u248) -> (MathError, u248) {
        if (b <= a) {
             (MathError::NO_ERROR, a - b)
        } else {
             (MathError::INTEGER_UNDERFLOW, 0 as u248)
        }
    }



pub fn addUInt(a:u248,  b:u248) ->(MathError, u248) {
        let c = a + b;

        if (c >= a) {
             (MathError::NO_ERROR, c)
        } else {
             (MathError::INTEGER_OVERFLOW, 0 as u248)
        }
    }

pub fn  addThenSubUInt(a:u248,  b:u248,  c:u248)-> (MathError, u248) {
       let  ( err0,  sum):(MathError,u248) = addUInt(a, b);

        if (err0 != MathError::NO_ERROR) {
             (err0, 0 as u248)
        }else{

         subUInt(sum, c)
        }

    }
#[test]
fn test_div_unit(){
 let a:u248 =320;
 let b:u248=30;
 let (err,c)=divUInt(a,b);
 dbg!("{}",c);
 require(c==10,"_care_math.divUInt test fail");
}

#[test]
fn test_sub_unit(){
 let a:u248 =320;
 let b:u248=30;
  let (err,c)=subUInt(a,b);
 dbg!("{}",c);
 require(c==290,"_care_math.subUInt test fail");

}

#[test]
fn test_add_unit(){

 let a:u248 =320;
 let b:u248=30;

  let (err,c)=addUInt(a,b);
 dbg!("{}",c);
 require(c==350,"_care_math.subUInt test fail");

}


#[test]
fn test_addThenSubUInt(){
 let a:u248 =320;
 let b:u248=30;
  let d:u248=30;
  let (err,c)=addThenSubUInt(a,b,d);
 dbg!("{}",c);
 require(c==320,"_care_math.subUInt test fail");
}  