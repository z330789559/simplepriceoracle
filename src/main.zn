//!
//! The 'SimplePriceOracle' contract entry.
//!
mod types;
use self::types::Balance;
use self::types::Address;
use std::collections::MTreeMap;
use CToken::Ctoken;

contract SimplePriceOracle {
     pub x:u64;
    pub fn new(_x:u64) -> Self {
        Self {
            x:_x
        }
    }
    pub fn getAddress(self,ctoken: Address )->u248{
          let instance = Ctoken::fetch(ctoken);
        let balance= instance.get();
        balance
    }
    pub fn  update(mut self,amount:Balance,ctoken: Address ){
              let mut instance = Ctoken::fetch(ctoken);
              instance.update(amount);
    }
}


#[test] 
fn test_get(){
    //  let mut token:Ctoken =Ctoken::new(24 as u248);
    // // dbg!("{}",token);
    // let oracle =SimplePriceOracle::new(10 as u64,token);
    // dbg!("{}",oracle.getAddress());
}